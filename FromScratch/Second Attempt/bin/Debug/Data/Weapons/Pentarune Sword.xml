<Weapon xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Second_Attempt">
  <Count>0</Count>
  <Description />
  <Enchantments xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
    <d2p1:KeyValueOfIfElseLogicArrayOfKeyValueOfstringanyTypem_POwhFTf>
      <d2p1:Key xmlns:d4p1="http://schemas.datacontract.org/2004/07/Second_Attempt.EnchantmentLogic">
        <d4p1:conditions>
          <d2p1:anyType i:type="d4p1:SourceCheck">
            <d4p1:SourceType>EffectCheck</d4p1:SourceType>
            <d4p1:logicType>SourceCheck</d4p1:logicType>
            <d4p1:name i:nil="true" />
          </d2p1:anyType>
          <d2p1:anyType i:type="d4p1:EffectTypeCheck">
            <d4p1:damType i:nil="true" />
            <d4p1:effTag>NoTag</d4p1:effTag>
            <d4p1:effType>ResultEffectType</d4p1:effType>
            <d4p1:logicType>EffectTypeCheck</d4p1:logicType>
            <d4p1:name i:nil="true" />
          </d2p1:anyType>
        </d4p1:conditions>
        <d4p1:elseResults />
        <d4p1:ifResults>
          <d2p1:anyType i:type="d4p1:IfElseLogic">
            <d4p1:conditions>
              <d2p1:anyType i:type="d4p1:ParamReader">
                <d4p1:Branch1>Character</d4p1:Branch1>
                <d4p1:Branch2>Attacker</d4p1:Branch2>
                <d4p1:Branch3>IsParentChar</d4p1:Branch3>
                <d4p1:Branch4 />
                <d4p1:logicType>ParamReader</d4p1:logicType>
                <d4p1:name i:nil="true" />
              </d2p1:anyType>
            </d4p1:conditions>
            <d4p1:elseResults />
            <d4p1:ifResults>
              <d2p1:anyType i:type="d4p1:SetVariable">
                <d4p1:logicType>SetVariable</d4p1:logicType>
                <d4p1:name i:nil="true" />
                <d4p1:setTo i:type="d4p1:MathLogic">
                  <d4p1:left i:type="d4p1:ParamReader">
                    <d4p1:Branch1>Character</d4p1:Branch1>
                    <d4p1:Branch2>Defender</d4p1:Branch2>
                    <d4p1:Branch3>ComparedValue</d4p1:Branch3>
                    <d4p1:Branch4 />
                    <d4p1:logicType>ParamReader</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                  </d4p1:left>
                  <d4p1:logicType>MathLogic</d4p1:logicType>
                  <d4p1:name i:nil="true" />
                  <d4p1:operation>Subtract</d4p1:operation>
                  <d4p1:right i:type="d4p1:ParamReader">
                    <d4p1:Branch1>Character</d4p1:Branch1>
                    <d4p1:Branch2>Parent</d4p1:Branch2>
                    <d4p1:Branch3>ComparedValue</d4p1:Branch3>
                    <d4p1:Branch4 />
                    <d4p1:logicType>ParamReader</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                  </d4p1:right>
                </d4p1:setTo>
                <d4p1:varName>InternalVar</d4p1:varName>
              </d2p1:anyType>
            </d4p1:ifResults>
            <d4p1:logicType>IfElseLogic</d4p1:logicType>
            <d4p1:name>IfWeAreAttacking</d4p1:name>
            <d4p1:variables />
          </d2p1:anyType>
          <d2p1:anyType i:type="d4p1:IfElseLogic">
            <d4p1:conditions>
              <d2p1:anyType i:type="d4p1:ParamReader">
                <d4p1:Branch1>Character</d4p1:Branch1>
                <d4p1:Branch2>Defender</d4p1:Branch2>
                <d4p1:Branch3>IsParentChar</d4p1:Branch3>
                <d4p1:Branch4 />
                <d4p1:logicType>ParamReader</d4p1:logicType>
                <d4p1:name i:nil="true" />
              </d2p1:anyType>
            </d4p1:conditions>
            <d4p1:elseResults />
            <d4p1:ifResults>
              <d2p1:anyType i:type="d4p1:SetVariable">
                <d4p1:logicType>SetVariable</d4p1:logicType>
                <d4p1:name i:nil="true" />
                <d4p1:setTo i:type="d4p1:MathLogic">
                  <d4p1:left i:type="d4p1:ParamReader">
                    <d4p1:Branch1>Character</d4p1:Branch1>
                    <d4p1:Branch2>Attacker</d4p1:Branch2>
                    <d4p1:Branch3>ComparedValue</d4p1:Branch3>
                    <d4p1:Branch4 />
                    <d4p1:logicType>ParamReader</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                  </d4p1:left>
                  <d4p1:logicType>MathLogic</d4p1:logicType>
                  <d4p1:name i:nil="true" />
                  <d4p1:operation>Subtract</d4p1:operation>
                  <d4p1:right i:type="d4p1:ParamReader">
                    <d4p1:Branch1>Character</d4p1:Branch1>
                    <d4p1:Branch2>Parent</d4p1:Branch2>
                    <d4p1:Branch3>ComparedValue</d4p1:Branch3>
                    <d4p1:Branch4 />
                    <d4p1:logicType>ParamReader</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                  </d4p1:right>
                </d4p1:setTo>
                <d4p1:varName>InternalVar</d4p1:varName>
              </d2p1:anyType>
            </d4p1:ifResults>
            <d4p1:logicType>IfElseLogic</d4p1:logicType>
            <d4p1:name>IfWeAreDefending</d4p1:name>
            <d4p1:variables />
          </d2p1:anyType>
          <d2p1:anyType i:type="d4p1:IfElseLogic">
            <d4p1:conditions>
              <d2p1:anyType i:type="d4p1:MathLogic">
                <d4p1:left i:type="d4p1:GetVariable">
                  <d4p1:logicType>GetVariable</d4p1:logicType>
                  <d4p1:name i:nil="true" />
                  <d4p1:varName>InternalVar</d4p1:varName>
                </d4p1:left>
                <d4p1:logicType>MathLogic</d4p1:logicType>
                <d4p1:name i:nil="true" />
                <d4p1:operation>GreaterThan</d4p1:operation>
                <d4p1:right i:type="d4p1:DoubleValue">
                  <d4p1:logicType>DoubleValue</d4p1:logicType>
                  <d4p1:name>0</d4p1:name>
                  <d4p1:val>0</d4p1:val>
                </d4p1:right>
              </d2p1:anyType>
            </d4p1:conditions>
            <d4p1:elseResults />
            <d4p1:ifResults>
              <d2p1:anyType i:type="d4p1:ReturnValue">
                <d4p1:logicType>ReturnValue</d4p1:logicType>
                <d4p1:name i:nil="true" />
                <d4p1:valueToReturn i:type="d4p1:MathLogic">
                  <d4p1:left i:type="d4p1:GetVariable">
                    <d4p1:logicType>GetVariable</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                    <d4p1:varName>EffectBaseValue</d4p1:varName>
                  </d4p1:left>
                  <d4p1:logicType>MathLogic</d4p1:logicType>
                  <d4p1:name i:nil="true" />
                  <d4p1:operation>Add</d4p1:operation>
                  <d4p1:right i:type="d4p1:MathLogic">
                    <d4p1:left i:type="d4p1:GetVariable">
                      <d4p1:logicType>GetVariable</d4p1:logicType>
                      <d4p1:name i:nil="true" />
                      <d4p1:varName>InternalVar</d4p1:varName>
                    </d4p1:left>
                    <d4p1:logicType>MathLogic</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                    <d4p1:operation>Multiply</d4p1:operation>
                    <d4p1:right i:type="d4p1:GetVariable">
                      <d4p1:logicType>GetVariable</d4p1:logicType>
                      <d4p1:name i:nil="true" />
                      <d4p1:varName>Scaling</d4p1:varName>
                    </d4p1:right>
                  </d4p1:right>
                </d4p1:valueToReturn>
              </d2p1:anyType>
            </d4p1:ifResults>
            <d4p1:logicType>IfElseLogic</d4p1:logicType>
            <d4p1:name>Return Value</d4p1:name>
            <d4p1:variables />
          </d2p1:anyType>
        </d4p1:ifResults>
        <d4p1:logicType>IfElseLogic</d4p1:logicType>
        <d4p1:name>Adversity Begets Prowess</d4p1:name>
        <d4p1:variables>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">Threshold</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">0</d2p1:anyType>
          </d2p1:ArrayOfanyType>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">Scaling</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">1</d2p1:anyType>
          </d2p1:ArrayOfanyType>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">EffectBaseValue</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">0</d2p1:anyType>
          </d2p1:ArrayOfanyType>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">ComparedValue</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">Strength</d2p1:anyType>
          </d2p1:ArrayOfanyType>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">ResultEffectType</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">Strength</d2p1:anyType>
          </d2p1:ArrayOfanyType>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">InternalVar</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">0</d2p1:anyType>
          </d2p1:ArrayOfanyType>
        </d4p1:variables>
      </d2p1:Key>
      <d2p1:Value>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>Threshold</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">0</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>Scaling</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">1</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>EffectBaseValue</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">0</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>ComparedValue</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">Strength</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>ResultEffectType</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">Strength</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>InternalVar</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">0</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
      </d2p1:Value>
    </d2p1:KeyValueOfIfElseLogicArrayOfKeyValueOfstringanyTypem_POwhFTf>
    <d2p1:KeyValueOfIfElseLogicArrayOfKeyValueOfstringanyTypem_POwhFTf>
      <d2p1:Key xmlns:d4p1="http://schemas.datacontract.org/2004/07/Second_Attempt.EnchantmentLogic">
        <d4p1:conditions>
          <d2p1:anyType i:type="d4p1:SourceCheck">
            <d4p1:SourceType>EffectCheck</d4p1:SourceType>
            <d4p1:logicType>SourceCheck</d4p1:logicType>
            <d4p1:name i:nil="true" />
          </d2p1:anyType>
          <d2p1:anyType i:type="d4p1:EffectTypeCheck">
            <d4p1:damType i:nil="true" />
            <d4p1:effTag>NoTag</d4p1:effTag>
            <d4p1:effType>ResultEffectType</d4p1:effType>
            <d4p1:logicType>EffectTypeCheck</d4p1:logicType>
            <d4p1:name i:nil="true" />
          </d2p1:anyType>
        </d4p1:conditions>
        <d4p1:elseResults />
        <d4p1:ifResults>
          <d2p1:anyType i:type="d4p1:IfElseLogic">
            <d4p1:conditions>
              <d2p1:anyType i:type="d4p1:ParamReader">
                <d4p1:Branch1>Character</d4p1:Branch1>
                <d4p1:Branch2>Attacker</d4p1:Branch2>
                <d4p1:Branch3>IsParentChar</d4p1:Branch3>
                <d4p1:Branch4 />
                <d4p1:logicType>ParamReader</d4p1:logicType>
                <d4p1:name i:nil="true" />
              </d2p1:anyType>
            </d4p1:conditions>
            <d4p1:elseResults />
            <d4p1:ifResults>
              <d2p1:anyType i:type="d4p1:SetVariable">
                <d4p1:logicType>SetVariable</d4p1:logicType>
                <d4p1:name i:nil="true" />
                <d4p1:setTo i:type="d4p1:MathLogic">
                  <d4p1:left i:type="d4p1:ParamReader">
                    <d4p1:Branch1>Character</d4p1:Branch1>
                    <d4p1:Branch2>Defender</d4p1:Branch2>
                    <d4p1:Branch3>ComparedValue</d4p1:Branch3>
                    <d4p1:Branch4 />
                    <d4p1:logicType>ParamReader</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                  </d4p1:left>
                  <d4p1:logicType>MathLogic</d4p1:logicType>
                  <d4p1:name i:nil="true" />
                  <d4p1:operation>Subtract</d4p1:operation>
                  <d4p1:right i:type="d4p1:ParamReader">
                    <d4p1:Branch1>Character</d4p1:Branch1>
                    <d4p1:Branch2>Parent</d4p1:Branch2>
                    <d4p1:Branch3>ComparedValue</d4p1:Branch3>
                    <d4p1:Branch4 />
                    <d4p1:logicType>ParamReader</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                  </d4p1:right>
                </d4p1:setTo>
                <d4p1:varName>InternalVar</d4p1:varName>
              </d2p1:anyType>
            </d4p1:ifResults>
            <d4p1:logicType>IfElseLogic</d4p1:logicType>
            <d4p1:name>IfWeAreAttacking</d4p1:name>
            <d4p1:variables />
          </d2p1:anyType>
          <d2p1:anyType i:type="d4p1:IfElseLogic">
            <d4p1:conditions>
              <d2p1:anyType i:type="d4p1:ParamReader">
                <d4p1:Branch1>Character</d4p1:Branch1>
                <d4p1:Branch2>Defender</d4p1:Branch2>
                <d4p1:Branch3>IsParentChar</d4p1:Branch3>
                <d4p1:Branch4 />
                <d4p1:logicType>ParamReader</d4p1:logicType>
                <d4p1:name i:nil="true" />
              </d2p1:anyType>
            </d4p1:conditions>
            <d4p1:elseResults />
            <d4p1:ifResults>
              <d2p1:anyType i:type="d4p1:SetVariable">
                <d4p1:logicType>SetVariable</d4p1:logicType>
                <d4p1:name i:nil="true" />
                <d4p1:setTo i:type="d4p1:MathLogic">
                  <d4p1:left i:type="d4p1:ParamReader">
                    <d4p1:Branch1>Character</d4p1:Branch1>
                    <d4p1:Branch2>Attacker</d4p1:Branch2>
                    <d4p1:Branch3>ComparedValue</d4p1:Branch3>
                    <d4p1:Branch4 />
                    <d4p1:logicType>ParamReader</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                  </d4p1:left>
                  <d4p1:logicType>MathLogic</d4p1:logicType>
                  <d4p1:name i:nil="true" />
                  <d4p1:operation>Subtract</d4p1:operation>
                  <d4p1:right i:type="d4p1:ParamReader">
                    <d4p1:Branch1>Character</d4p1:Branch1>
                    <d4p1:Branch2>Parent</d4p1:Branch2>
                    <d4p1:Branch3>ComparedValue</d4p1:Branch3>
                    <d4p1:Branch4 />
                    <d4p1:logicType>ParamReader</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                  </d4p1:right>
                </d4p1:setTo>
                <d4p1:varName>InternalVar</d4p1:varName>
              </d2p1:anyType>
            </d4p1:ifResults>
            <d4p1:logicType>IfElseLogic</d4p1:logicType>
            <d4p1:name>IfWeAreDefending</d4p1:name>
            <d4p1:variables />
          </d2p1:anyType>
          <d2p1:anyType i:type="d4p1:IfElseLogic">
            <d4p1:conditions>
              <d2p1:anyType i:type="d4p1:MathLogic">
                <d4p1:left i:type="d4p1:GetVariable">
                  <d4p1:logicType>GetVariable</d4p1:logicType>
                  <d4p1:name i:nil="true" />
                  <d4p1:varName>InternalVar</d4p1:varName>
                </d4p1:left>
                <d4p1:logicType>MathLogic</d4p1:logicType>
                <d4p1:name i:nil="true" />
                <d4p1:operation>GreaterThan</d4p1:operation>
                <d4p1:right i:type="d4p1:DoubleValue">
                  <d4p1:logicType>DoubleValue</d4p1:logicType>
                  <d4p1:name>0</d4p1:name>
                  <d4p1:val>0</d4p1:val>
                </d4p1:right>
              </d2p1:anyType>
            </d4p1:conditions>
            <d4p1:elseResults />
            <d4p1:ifResults>
              <d2p1:anyType i:type="d4p1:ReturnValue">
                <d4p1:logicType>ReturnValue</d4p1:logicType>
                <d4p1:name i:nil="true" />
                <d4p1:valueToReturn i:type="d4p1:MathLogic">
                  <d4p1:left i:type="d4p1:GetVariable">
                    <d4p1:logicType>GetVariable</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                    <d4p1:varName>EffectBaseValue</d4p1:varName>
                  </d4p1:left>
                  <d4p1:logicType>MathLogic</d4p1:logicType>
                  <d4p1:name i:nil="true" />
                  <d4p1:operation>Add</d4p1:operation>
                  <d4p1:right i:type="d4p1:MathLogic">
                    <d4p1:left i:type="d4p1:GetVariable">
                      <d4p1:logicType>GetVariable</d4p1:logicType>
                      <d4p1:name i:nil="true" />
                      <d4p1:varName>InternalVar</d4p1:varName>
                    </d4p1:left>
                    <d4p1:logicType>MathLogic</d4p1:logicType>
                    <d4p1:name i:nil="true" />
                    <d4p1:operation>Multiply</d4p1:operation>
                    <d4p1:right i:type="d4p1:GetVariable">
                      <d4p1:logicType>GetVariable</d4p1:logicType>
                      <d4p1:name i:nil="true" />
                      <d4p1:varName>Scaling</d4p1:varName>
                    </d4p1:right>
                  </d4p1:right>
                </d4p1:valueToReturn>
              </d2p1:anyType>
            </d4p1:ifResults>
            <d4p1:logicType>IfElseLogic</d4p1:logicType>
            <d4p1:name>Return Value</d4p1:name>
            <d4p1:variables />
          </d2p1:anyType>
        </d4p1:ifResults>
        <d4p1:logicType>IfElseLogic</d4p1:logicType>
        <d4p1:name>Adversity Begets Prowess</d4p1:name>
        <d4p1:variables>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">Threshold</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">0</d2p1:anyType>
          </d2p1:ArrayOfanyType>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">Scaling</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">0.25</d2p1:anyType>
          </d2p1:ArrayOfanyType>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">EffectBaseValue</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">0</d2p1:anyType>
          </d2p1:ArrayOfanyType>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">ComparedValue</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">Health</d2p1:anyType>
          </d2p1:ArrayOfanyType>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">ResultEffectType</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">Strength</d2p1:anyType>
          </d2p1:ArrayOfanyType>
          <d2p1:ArrayOfanyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">InternalVar</d2p1:anyType>
            <d2p1:anyType xmlns:d7p1="http://www.w3.org/2001/XMLSchema" i:type="d7p1:string">0</d2p1:anyType>
          </d2p1:ArrayOfanyType>
        </d4p1:variables>
      </d2p1:Key>
      <d2p1:Value>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>Threshold</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">0</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>Scaling</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">0.25</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>EffectBaseValue</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">0</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>ComparedValue</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">Health</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>ResultEffectType</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">Strength</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
        <d2p1:KeyValueOfstringanyType>
          <d2p1:Key>InternalVar</d2p1:Key>
          <d2p1:Value xmlns:d6p1="http://www.w3.org/2001/XMLSchema" i:type="d6p1:string">0</d2p1:Value>
        </d2p1:KeyValueOfstringanyType>
      </d2p1:Value>
    </d2p1:KeyValueOfIfElseLogicArrayOfKeyValueOfstringanyTypem_POwhFTf>
  </Enchantments>
  <IsEquipped>false</IsEquipped>
  <IsIdentified>false</IsIdentified>
  <ItemEffects />
  <ItemName>Pentarune Sword</ItemName>
  <Type>Gloves</Type>
  <UnidentifiedDescription i:nil="true" />
  <Use>Equipable</Use>
  <Weight>8</Weight>
  <BlockingDifficulty>1</BlockingDifficulty>
  <DamageTypes xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
    <d2p1:KeyValueOfUtilities.DamageTypedoublenlt4N763>
      <d2p1:Key>Slash</d2p1:Key>
      <d2p1:Value>1.25</d2p1:Value>
    </d2p1:KeyValueOfUtilities.DamageTypedoublenlt4N763>
    <d2p1:KeyValueOfUtilities.DamageTypedoublenlt4N763>
      <d2p1:Key>Pierce</d2p1:Key>
      <d2p1:Value>0.25</d2p1:Value>
    </d2p1:KeyValueOfUtilities.DamageTypedoublenlt4N763>
  </DamageTypes>
  <DefensiveBonus>2</DefensiveBonus>
  <ExcessStrengthMultiplier>0.3</ExcessStrengthMultiplier>
  <OffensiveBonus>2</OffensiveBonus>
  <ParryBreak>2</ParryBreak>
  <ParryStrength>2</ParryStrength>
  <StaminaRequirement>8</StaminaRequirement>
  <WeaponTypes>
    <Utilities.WeaponType>HeavyBlade</Utilities.WeaponType>
    <Utilities.WeaponType>Melee</Utilities.WeaponType>
  </WeaponTypes>
</Weapon>